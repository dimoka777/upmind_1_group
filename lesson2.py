# üî¢ Integer (int) Methods
# print("üî¢ Integer Methods")

# int() -
num = -10
# print("Absolute value:", abs(num))  # —É–±–∏—Ä–∞–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ —É —á–∏—Å–ª–∞
# print("Max of (10, 20, 30):", max(10, 20, 30))  # –Ω–∞—Ö–æ–¥–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ —Å–ø–∏—Å–∫–∞
# print("Min of (10, 20, 30):", min(10, 20, 30))  # –Ω–∞—Ö–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ —Å–ø–∏—Å–∫–∞
# print("Power (2^3) using pow():", pow(2, 3))  # –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å
# print("Power (2^3) using **:", 2 ** 3)  # –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å
# print("Convert '100' to int:", int("100"))  # –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å—Ç—Ä–æ–∫–∏ 100 –≤ —á–∏—Å–ª–æ
# print("Convert float 3.9 to int:", int(3.9))  # –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–ª–æ–∞—Ç–∞ –≤ —á–∏—Å–ª–æ —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –≤ –º–µ–Ω—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É

# # üü° Float (float) Methods
# print("\nüü° Float Methods")  # —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π
#
fnum = -7.8
# print("Absolute value:", abs(fnum))  # –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ
# print("Round 4.678:", round(4.678))  # –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ
# print("Round 4.678 to 2 decimals:", round(4.6786, 3))  # –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
# print("Convert '10.5' to float:", float("10.5"))  # –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å—Ç—Ä–æ–∫–∏ –≤–æ —Ñ–ª–æ–∞—Ç(—á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π)
#
# # üî† String (str) Methods
# print("\nüî† String Methods")  # —Å—Ç—Ä–æ–∫–∞
#
# test_string = "  Hello World  "
# print("Uppercase:", test_string.upper())  # –∏–∑–º–µ–Ω—è–µ—Ç –º–∞–ª–µ–Ω—å–∫–∏–µ –±—É–∫–≤—ã –Ω–∞ –±–æ–ª—å—à–∏–µ
# print("Lowercase:", test_string.lower())  # –∏–∑–º–µ–Ω—è–µ—Ç –±–æ–ª—å—à–∏–µ –±—É–∫–≤—ã –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ
# print("Title Case:", "hello world".title())  # –∏–∑–º–µ–Ω—è–µ—Ç –ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã –≤ –∫–∞–∂–¥–æ–º —Å–ª–æ–≤–µ –Ω–∞ –±–æ–ª—å—à–∏–µ
# print("Capitalized:", "hello World".capitalize())  # –∏–∑–º–µ–Ω—è–µ—Ç –ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã –≤ –∫–∞–∂–¥–æ–º —Å–ª–æ–≤–µ –Ω–∞ –±–æ–ª—å—à–∏–µ
# print("Stripped spaces:", test_string.strip())  # —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏
# print("Left stripped:", test_string.lstrip())  # —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏
# print("Right stripped:", test_string.rstrip())  # —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏
# print("Index of 'World':", test_string.find("World"))  # –ø–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ
# print("Replace 'Hello' with 'Hi':", test_string.replace("Hello", "Hi"))  # –∑–∞–º–µ–Ω–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
# fruits = "apple,banana,orange"
# words = fruits.split(",")  # –¥–µ–ª–∏–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ –¥–µ–ª–∏—Ç–µ–ª—å
# print("Split string:", words)
# print("Joined string:", "-".join(words))  # —Å–æ–µ–¥–∏–Ω—è–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –¥–µ–ª–∏—Ç–µ–ª—å
# print("Starts with 'Hello':", test_string.startswith("Hello"))  # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
# print("Ends with 'World':", test_string.endswith("World"))  # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π
# print("Is '12345' all digits?:", "12345".isdigit())  # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–ª–æ–º
# print("Is 'abc' all letters?:", "abc".isalpha())  # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ –∞–ª—Ñ–∞–≤–∏—Ç–∞
# print("Is 'abc123' alphanumeric?:", "abc123".isalnum())  # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏–∑ –±—É–∫–≤ –∏–ª–∏ —Ü–∏—Ñ—Ä
# print("Is '   ' all spaces?:", "   ".isspace())  # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤, —Ç–∞–±–æ–≤
#
# # üîµ Boolean (bool) Methods
# print("\nüîµ Boolean Methods")  #

# print("Boolean of 0:", bool(0))  # False
# print("Boolean of 1:", bool(1))  # True
# print("Boolean of empty string:", bool(""))  # False
# print("Boolean of non-empty string:", bool("hello"))  # True
# print("Boolean of None:", bool(None))  # False
# print("Boolean of empty list:", bool([]))  # False
# print("Boolean of non-empty list:", bool([1, 2, 3]))  # True

# # üéØ Formatting Strings using f-strings
# name = input("What is your name: ")
# age = input("What is your age: ")
# print(f"My name is {name} and I am {age} years old.")


a = '2'
b = '3'
print(a + b)