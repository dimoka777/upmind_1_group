# Раздел 1: Типы данных (10 заданий)
# Преобразование типов
# Напишите программу, которая принимает число с плавающей точкой и выводит его целую часть.
# Вход: 3.14
# Выход: 3
#
# Работа со строками
# Программа принимает строку и выводит её длину.
# Вход: "Hello"
# Выход: 5
#
# Списки и кортежи
# Дан кортеж (1, 2, 3). Преобразуйте его в список, добавьте элемент 4 и выведите результат.
# Выход: [1, 2, 3, 4]
#
# Множества
# Даны два списка: [1, 2, 2, 3] и [3, 4, 5]. Создайте из них множества и найдите их пересечение.
# Выход: {3}
#
# Словари
# Создайте словарь из пар ключ-значение: 'a': 1, 'b': 2. Добавьте новую пару 'c': 3 и выведите словарь.
# Выход: {'a': 1, 'b': 2, 'c': 3}
#
# Булевы значения
# Напишите программу, которая принимает два числа и выводит True, если они равны, и False в противном случае.
# Вход: 5, 5
# Выход: True
#
# NoneType
# Напишите функцию, которая возвращает None и выведите результат её вызова.
# Выход: None
#
# Преобразование в строку
# Примите число и выведите его строковое представление.
# Вход: 42
# Выход: "42"
#
# Работа с кортежами
# Дан кортеж (1, 2, 3). Выведите его последний элемент.
# Выход: 3
#
# Сравнение типов
# Напишите программу, которая проверяет, является ли введённое значение целым числом.
# Вход: 10
# Выход: True
#
# Раздел 2: Ввод данных (10 заданий)
# Простой ввод
# Напишите программу, которая запрашивает имя пользователя и приветствует его.
# Вход: "Alice"
# Выход: "Hello, Alice!"
#
# Ввод числа
# Запросите у пользователя число и увеличьте его на 1.
# Вход: 5
# Выход: 6
#
# Ввод нескольких значений
# Запросите два числа и выведите их сумму.
# Вход: 3, 4
# Выход: 7
#
# Ввод списка
# Запросите у пользователя список чисел, разделённых пробелами, и выведите их сумму.
# Вход: "1 2 3"
# Выход: 6
#
# Ввод с преобразованием
# Запросите строку и выведите её в верхнем регистре.
# Вход: "hello"
# Выход: "HELLO"
#
# Ввод и условия
# Запросите возраст и выведите "Adult", если возраст >= 18, и "Child" в противном случае.
# Вход: 20
# Выход: "Adult"
#
# Ввод и циклы
# Запросите число N, затем N строк и выведите их в обратном порядке.
# Вход:
# 3
# "a"
# "b"
# "c"
# Выход: ['c', 'b', 'a']
#
# Ввод словаря
# Запросите ключ и значение, добавьте их в словарь и выведите его.
# Вход: "name", "Alice"
# Выход: {'name': 'Alice'}
#
# Ввод и обработка ошибок
# Напишите программу, которая запрашивает число и обрабатывает исключение, если введено не число.
# Вход: "abc"
# Выход: "Invalid input"
#
# Комбинированный ввод
# Запросите имя и возраст, затем выведите: "{name} is {age} years old".
# Вход: "Alice", 25
# Выход: "Alice is 25 years old"
#
# Раздел 3: Условные конструкции (10 заданий)
# Простое условие
# Напишите программу, которая проверяет, положительное ли число.
# Вход: 5
# Выход: "Positive"
#
# Чётность числа
# Проверьте, является ли число чётным.
# Вход: 4
# Выход: "Even"
#
# Сравнение строк
# Сравните две строки и выведите "Equal", если они совпадают.
# Вход: "hello", "hello"
# Выход: "Equal"
#
# Тернарный оператор
# Используя тернарный оператор, определите, больше ли число 10.
# Вход: 15
# Выход: "Greater"
#
# Множественные условия
# Напишите программу, которая выводит "A" если оценка >= 90, "B" если >= 80 и т.д.
# Вход: 85
# Выход: "B"
#
# Проверка диапазона
# Проверьте, находится ли число в диапазоне от 10 до 20.
# Вход: 15
# Выход: "In range"
#
# Короткая запись условий
# Используя and, проверьте, является ли число двузначным.
# Вход: 42
# Выход: "Yes"
#
# Вложенные условия
# Проверьте, является ли число положительным, отрицательным или нулём.
# Вход: -3
# Выход: "Negative"
#
# Проверка на вхождение
# Проверьте, есть ли элемент в списке.
# Вход: 3, [1, 2, 3]
# Выход: "Found"

# Сложное условие
# Проверьте, является ли год високосным.
# Вход: 2020
# Выход: "Leap year"
#
# Раздел 4: Циклы (10 заданий)
# Цикл for
# Выведите числа от 1 до 5.
# Выход: 1 2 3 4 5
#
# Сумма чисел
# Вычислите сумму чисел от 1 до N.
# Вход: 3
# Выход: 6
#
# Перебор списка
# Дан список [1, 2, 3], выведите каждый элемент.
# Выход:
# 1
# 2
# 3
#
# Обратный порядок
# Выведите числа от 10 до 1 в обратном порядке.
# Выход: 10 9 8 ... 1
#
# Поиск в списке
# Найдите индекс элемента в списке.
# Вход: 3, [1, 2, 3]
# Выход: 2
#
# Фильтрация списка
# Выведите только чётные числа из списка.
# Вход: [1, 2, 3, 4]
# Выход: [2, 4]
#
# Генерация списка
# Создайте список квадратов чисел от 1 до 5.
# Выход: [1, 4, 9, 16, 25]
#
# Бесконечный цикл
# Напишите программу, которая запрашивает число, пока не будет введён 0.
# Вход: 5, 3, 0
# Выход: "Done"
#
# Вложенные циклы
# Выведите таблицу умножения до 5.
# Выход:
# 1 2 3 ...
# 2 4 6 ...
# ...
#
# Break и continue
# Выведите числа от 1 до 10, пропуская 5.
# Выход: 1 2 3 4 6 7 8 9 10
#
