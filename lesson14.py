# Контрольная работа по пройденным темам Python

# === Комментарии, int, str, bool, float ===


# --- Базовые ---

# 1. Создай переменную 10 и выведи её.
# 2. Создай строку 'Привет' и выведи её длину.
# 3. Дано число 42. Преобразуй его в строку, а затем обратно в число.
# 4. Создай переменную x = 42. Проверь её тип с помощью type().
# 5. Создай переменную is_active = True и выведи её.

# --- Средние ---

# 6. Дано число 18. Проверь, является ли оно чётным.
# 7. Даны числа 10 и 3.14. Выведи результат их сложения.
# 8. Даны числа 10, 20, 30. Найди их среднее арифметическое и выведи результат.
# 9. Дана строка "Привет, как дела?". Проверь, начинается ли она с заглавной буквы.
# 10. Даны переменные 'Анна' и 25. Используй f-строку, чтобы вывести: 'Меня зовут Анна и мне 25 лет.'

# --- Сложные ---

# 11. Дано число 123.456. Выведи только его дробную часть.
# 12. Даны строки '123' и 'abc'. Проверь для каждой, состоит ли она только из цифр.
# 13. Преобразуй строку '123.45' в число, прибавь 1 и выведи результат.
# 14. Дана строка ''. Проверь, является ли она пустой.
# 15. Дана строка 'Hello World'. Приведи её к нижнему регистру и проверь, есть ли подстрока 'world'.

# === Методы int, str, bool, float ===


# --- Базовые ---

# 1. Дана строка 'hello world'. Выведи её в верхнем регистре с помощью метода .upper()
# 2. Дана строка '123abc'. Проверь, состоит ли она только из цифр, используя метод .isdigit()
# 3. Дано число 7.89. Округли его до ближайшего целого с помощью round()
# 4. Дана строка 'Python'. Определи, состоит ли она только из букв (без пробелов и цифр)
# 5. Дана строка 'hello world'. Замени в ней все пробелы на подчёркивания с помощью .replace()

# --- Средние ---

# 6. Дана строка 'banana' и символ 'a'. Выведи индекс первого вхождения символа в строку
# 7. Дана строка 'Python is awesome'. Раздели её на список слов с помощью .split() и выведи результат
# 8. Даны строки 'Hello' и 'hello'. Проверь, равны ли они между собой без учёта регистра символов
# 9. Дано число 3.141592. Округли его до двух знаков после запятой
# 10. Дана строка 'python'. Проверь, состоит ли она только из строчных букв

# --- Сложные ---

# 11. Дана строка 'level'. Проверь, является ли она палиндромом.
# 12. Дана строка 'hello world'. Проверь, начинается ли она с 'hello' и заканчивается ли на 'world'.
# 13. Дана строка '456'. Проверь, можно ли её преобразовать в int без ошибки.
# 14. Дана строка 'banana'. Посчитай, сколько раз в ней встречается буква 'a'.
# 15. Дана строка '10 20 30'. Преобразуй её в список чисел и выведи их сумму.

# === Условные конструкции (if, elif, else, логика) ===


# --- Базовые ---

# 1. Дано число -7. Напиши программу, которая проверяет, положительное ли оно.
# 2. Даны числа 15 и 22. Выведи большее из них.
# 3. Дано число 13. Проверь, чётное оно или нечётное.
# 4. Дано значение 17. Если возраст >= 18, выведи 'взрослый', иначе — 'ребёнок'.
# 5. Дана строка 'hello'. С помощью тернарного оператора выведи 'короткая' если длина < 10, иначе 'длинная'.

# --- Средние ---

# 6. Дана строка 'abracadabra' и символ 'c'. Определи, входит ли символ в строку.
# 7. Дано имя 'иван'. Проверь, начинается ли оно с заглавной буквы.
# 8. Дано число 30. Проверь, делится ли оно и на 3, и на 5.
# 9. Дана переменная 4. Используй if/elif/else, чтобы вывести 'отлично', 'хорошо', 'удовлетворительно' или 'плохо'.
# 10. Даны числа 5, 5, 5. Проверь, равны ли они между собой.

# --- Сложные ---

# 11. Пользователь вводит два числа и оператор (+, -, *, /). С помощью if/elif/else
# выполни соответствующую операцию и выведи результат.
# 12. Пользователь вводит год. Проверь, является ли он високосным.
# Год является високосным, если он делится на 4, но не делится на 100, или делится на 400.
# 13. Напиши программу, которая определяет, в каком диапазоне находится число.
# 14. Напиши тернарное выражение для вывода "да/нет" по логике.
# 15. Пользователь вводит строку. Проверь, содержит ли она одновременно цифры, буквы и специальные символы
# (например: !@#).

# === Списки ===


# --- Базовые ---

# 1. Создай список из 5 чисел.
# 2. Получи третий элемент списка.
# 3. Измени значение по индексу.
# 4. Добавь новый элемент в список.
# 5. Удали последний элемент.

# --- Средние ---

# 6. Пользователь вводит строку чисел через пробел. Преобразуй её в список и выведи длину списка.
# 7. Пользователь вводит строку чисел через пробел. Преобразуй её в список и выведи первые 3 элемента.
# 8. Пользователь дважды вводит строку чисел через пробел. Объедини их в один список и выведи.
# 9. Пользователь вводит строку чисел через пробел. Найди и выведи сумму всех чисел.
# 10. Пользователь вводит строку чисел через пробел. Преобразуй в список и выведи отсортированный список по возрастанию.

# --- Сложные ---

# 11. Пользователь вводит строку чисел через пробел. Выведи список квадратов этих чисел.
# 12. Проверь, есть ли дубликаты в списке.
# 13. Удали все повторяющиеся элементы.
# 14. Перевёрни список без reverse().
# 15. Заполни список вводом пользователя.

# === Словари ===


# --- Базовые ---

# 1. Создай словарь person = {'name': 'Alice', 'age': 30}.
# 2. Используя словарь person, выведи значение по ключу 'name'.
# 3. Добавь в словарь person ключ 'city' со значением 'London'.
# 4. Удали из словаря person ключ 'age'.
# 5. Проверь, есть ли ключ 'email' в словаре person.

# --- Средние ---

# 6. Перебери словарь и выведи ключи и значения.
# 7. Создай два словаря. Объедини два словаря.
# 8. Создай словарь с квадратами чисел от 1 до 5.
# 9. Создай словарь из двух списков с помощью zip().

# --- Сложные ---

# 11. Считай строку и выведи сколько раз встречается каждая буква.
# 12. Создай вложенный словарь.
# 13. Отсортируй словарь по значениям.
# 14. Удали все пары, где значение меньше 5.
# 15. Считай пары ключ:значение от пользователя.

# === Кортежи и множества ===


# --- Базовые ---

# 1. Создай кортеж (10, 20, 30).
# 2. Выведи второй элемент кортежа (5, 15, 25).
# 3. Проверь, содержится ли число 15 в кортеже (5, 10, 15, 20).
# 4. Преобразуй кортеж (1, 2, 3) в список.
# 5. Дано: [1, 2, 2, 3, 3, 4]. Создай из него множество без дубликатов.

# --- Средние ---

# 6. Найди пересечение множеств {1, 2, 3} и b = {2, 3, 4}.
# 7. Объедини множества {1, 2} и b = {3, 4}.
# 8. Удали элемент 'apple' из множества {'apple', 'banana', 'cherry'}.
# 9. В кортеже (1, 2, 2, 3), посчитай количество двоек и найди индекс первой двойки.
# 10. Преобразуй строку 'hello' в множество уникальных символов.

# --- Сложные ---

# 11. Найди симметрическую разность двух множеств.
# 12. Проверь, является ли одно множество подмножеством другого.
# 13. Напиши функцию, возвращающую уникальные элементы списка.
# 14. Создай кортеж из строк и найди самую длинную строку.


# === Циклы for и while ===


# --- Базовые ---

# 1. С помощью цикла for выведи числа от 1 до 10 включительно.
# 2. Используя цикл while, выведи числа от 5 до 0.
# 3. Дана строка 'Python'. Выведи каждый символ строки на новой строке.
# 4. Используя цикл, вычисли сумму чисел от 1 до 100.
# 5. С помощью цикла for выведи квадраты чисел от 1 до 5.

# --- Средние ---

# 6. Посчитай количество чётных чисел от 1 до 20.
# 7. Запроси 5 чисел от пользователя и посчитай среднее.
# 8. Выведи таблицу умножения на 3.
# 9. Сгенерируй список квадратов через цикл.
# 10. Создай обратный отсчёт с шагом 2.

# --- Сложные ---

# 11. Выведи числа Фибоначчи до 100.
# 12. Найди факториал числа.
# 13. Используй вложенный цикл для вывода таблицы умножения.
# 14. Угадай число с помощью while.
# 15. Запрашивай у пользователя числа и суммируй их, пока он не введёт 'стоп'.

# === Прерывание циклов (break, continue, else) ===


# --- Базовые ---

# 1. Запрашивай ввод пользователя в цикле и завершай цикл при вводе 'q'.
# 2. С помощью цикла for выведи только нечётные числа от 1 до 10, используя continue.
# 3. Напиши цикл for, который завершится без break, и используй конструкцию else.
# 4. Создай бесконечный цикл, запрашивающий ввод чисел и завершающийся при вводе 0.
# 5. Запрашивай ввод строк и пропускай пустые строки, продолжая цикл.

# --- Средние ---

# 6. Найди первое число, кратное 7, и выйди из цикла.
# 7. Пропусти ввод чисел меньше 0.
# 8. Проверь, содержит ли список хотя бы одно чётное (и выйди).
# 9. Используй else, если число не найдено в списке.
# 10. Заверши цикл, если строка содержит 'x'.

# --- Сложные ---

# 11. Выведи все делители числа, кроме 1 и самого числа.
# 12. Запроси у пользователя числа. Прерви ввод с помощью break, как только пользователь введёт отрицательное число.
# 13. Прерви цикл, если сумма введённых чисел больше 100.
# 14. Выведи числа от 1 до 30, пропуская те, которые делятся на 3 или 5 (с помощью continue).
# 15. Выведи только те числа от 1 до 50, которые не делятся на 2 и 3.

# === Генераторы списков, zip, enumerate, циклы в словарях ===


# --- Базовые ---

# 1. Используй генератор списка для создания списка квадратов чисел от 1 до 10.
# 2. Дано: {'a': 1, 'b': 2}. Перебери его и выведи все ключи.
# 3. Дано: ['apple', 'banana', 'cherry']. Используй enumerate() для нумерации и вывода.
# 4. Даны списки names = ['Alice', 'Bob'] и ages = [30, 25]. Объедини их в пары с помощью zip().
# 5. Дано: d = {'x': 10, 'y': 20}. Получи список всех значений с помощью .values().

# --- Средние ---

# 6. Создай словарь из двух списков с помощью zip().
# 7. Используй генератор для фильтрации чётных чисел.
# 8. Пронумеруй строки текста с помощью enumerate().
# 9. Создай список длины слов из строки.
# 10. Объедини три списка в список кортежей.

# --- Сложные ---

# 11. Дана строка 'hello world! hello python!'. Создай словарь, где ключ — буква, а значение — сколько раз она
# встречается в строке.
# 12. Используй zip() и генератор списков для сложения элементов.
# 13. Создай список кортежей (индекс, квадрат числа).
# 14. Преобразуй словарь в список строк “ключ: значение”.
# 15. Используй enumerate() в цикле while.
